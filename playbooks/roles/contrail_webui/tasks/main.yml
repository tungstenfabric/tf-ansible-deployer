---
- name: create /etc/contrail/webui
  file:
    path: /etc/contrail/webui
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_webui.env stat"
  stat:
    path: "/etc/contrail/common_webui.env"
  register: st

- name: "delete /etc/contrail/common_webui.env if exists"
  file:
    path: "/etc/contrail/common_webui.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_webui.env"
  file:
    path: "/etc/contrail/common_webui.env"
    mode: "0640"
    state: touch

- name: "populate cluster wide common_webui.env"
  lineinfile: dest=/etc/contrail/common_webui.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"
  no_log: True

- name: "populate instance specific common_webui.env"
  lineinfile: dest=/etc/contrail/common_webui.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes
  no_log: True

- name: "populate pod specific common_webui.env"
  lineinfile: dest=/etc/contrail/common_webui.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ roles[instance_name].webui | default ({}) }}"
  when: roles[instance_name].webui is defined
  ignore_errors: yes
  no_log: True

- name: "create contrail webui compose file"
  template:
    src: contrail-webui.yaml.j2
    dest: "/etc/contrail/webui/docker-compose.yaml"

- name: "start contrail webui"
  docker_compose:
    project_src: /etc/contrail/webui
  environment:
    DOCKER_CLIENT_TIMEOUT: '120'
    COMPOSE_HTTP_TIMEOUT: '120'
